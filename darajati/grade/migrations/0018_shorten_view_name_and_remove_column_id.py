# Generated by Django 2.0.1 on 2018-12-27 11:30

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('grade', '0017_auto_20181227_1121'),
    ]

    operations = [
        migrations.RunSQL(
            """
            DROP VIEW IF EXISTS grade_sectionsobjectiveaveragesview;
            
            DROP VIEW IF EXISTS grade_sectionsobjaveragesview;
            
            DROP VIEW IF EXISTS grade_sectionsaveragesview;
            
            CREATE OR REPLACE VIEW grade_sectionsaveragesview AS 
            SELECT 
              SEM.ID SEMESTER_ID, 
              SEM.CODE SEMESTER_CODE,
              C.ID COURSE_ID, 
              C.CODE COURSE_CODE, 
              S.ID SECTION_ID, 
              S.CODE SECTION_CODE, 
              G.GRADE_FRAGMENT_ID, 
              F.BOUNDARY_TYPE,
              F.CATEGORY, 
              F.DESCRIPTION, 
              F.WEIGHT,    
              AVG(G.GRADE_QUANTITY) GRADES_AVERAGE,
              AVG(G.GRADE_QUANTITY) / F.WEIGHT * 100 GRADES_AVERAGE_PERCENTAGE
            FROM 
              GRADE_STUDENTGRADE G INNER JOIN
              ENROLLMENT_ENROLLMENT E ON G.ENROLLMENT_ID = E.ID INNER JOIN
              ENROLLMENT_SECTION S ON E.SECTION_ID = S.ID INNER JOIN
              ENROLLMENT_COURSEOFFERING O ON S.COURSE_OFFERING_ID = O.ID INNER JOIN
              ENROLLMENT_COURSE C ON O.COURSE_ID = C.ID INNER JOIN
              ENROLLMENT_SEMESTER SEM ON O.SEMESTER_ID = SEM.ID INNER JOIN
              GRADE_GRADEFRAGMENT F ON G.GRADE_FRAGMENT_ID = F.ID
            WHERE 
              G.GRADE_QUANTITY IS NOT NULL AND
              E.ACTIVE = TRUE
            GROUP BY 
              G.GRADE_FRAGMENT_ID, 
              F.BOUNDARY_TYPE,
              F.CATEGORY, 
              F.DESCRIPTION, 
              F.WEIGHT, 
              S.ID, 
              S.CODE, 
              C.ID, 
              C.CODE, 
              SEM.ID, 
              SEM.CODE;
            
            CREATE OR REPLACE VIEW grade_sectionsobjaveragesview AS 
            SELECT
                Q.SEMESTER_ID,
                Q.SEMESTER_CODE,
                Q.COURSE_ID,
                Q.COURSE_CODE,
                Q.SECTION_ID,
                Q.SECTION_CODE,
                SUM(Q.WEIGHT) WEIGHTS_SUM,
                ((SUM(Q.GRADES_AVERAGE_PERCENTAGE * Q.WEIGHT) / SUM(Q.WEIGHT)) / 100) * SUM(Q.WEIGHT) GRADES_OBJECTIVE_AVERAGE,
                SUM(Q.GRADES_AVERAGE_PERCENTAGE * Q.WEIGHT) / SUM(Q.WEIGHT) GRADES_OBJECTIVE_AVERAGE_PERCENTAGE
            FROM (
                SELECT 
                    SEMESTER_ID,
                    SEMESTER_CODE,
                    COURSE_ID,
                    COURSE_CODE,
                    SECTION_ID,
                    SECTION_CODE,
                    GRADE_FRAGMENT_ID,
                    CATEGORY,
                    DESCRIPTION,
                    WEIGHT,
                    GRADES_AVERAGE,
                    GRADES_AVERAGE_PERCENTAGE 
                FROM 
                    GRADE_SECTIONSAVERAGESVIEW
                WHERE
                    BOUNDARY_TYPE = 'OBJECTIVE') Q
            GROUP BY
                Q.SEMESTER_ID,
                Q.SEMESTER_CODE,
                Q.COURSE_ID,
                Q.COURSE_CODE,
                Q.SECTION_ID,
                Q.SECTION_CODE;
            """
        ),
    ]
