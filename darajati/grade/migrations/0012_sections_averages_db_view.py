# Generated by Django 2.0.1 on 2018-12-04 11:21

from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        ('grade', '0011_auto_20181203_1513'),
    ]

    operations = [
        migrations.RunSQL(
            """
            DROP VIEW IF EXISTS grade_sectionsaveragesview;
            
            CREATE OR REPLACE VIEW grade_sectionsaveragesview AS 
            SELECT ROW_NUMBER() OVER () AS ID, Q.*, Q.GRADES_AVERAGE / Q.WEIGHT * 100 GRADES_AVERAGE_PERCENTAGE FROM (
            SELECT 
              SEM.ID SEMESTER_ID, 
              SEM.CODE SEMESTER_CODE,
              C.ID COURSE_ID, 
              C.CODE COURSE_CODE, 
              S.ID SECTION_ID, 
              S.CODE SECTION_CODE, 
              G.GRADE_FRAGMENT_ID, 
              F.BOUNDARY_TYPE,
              F.CATEGORY, 
              F.DESCRIPTION, 
              F.WEIGHT,    
              AVG(G.GRADE_QUANTITY) GRADES_AVERAGE
            FROM 
              GRADE_STUDENTGRADE G INNER JOIN
              ENROLLMENT_ENROLLMENT E ON G.ENROLLMENT_ID = E.ID INNER JOIN
              ENROLLMENT_SECTION S ON E.SECTION_ID = S.ID INNER JOIN
              ENROLLMENT_COURSEOFFERING O ON S.COURSE_OFFERING_ID = O.ID INNER JOIN
              ENROLLMENT_COURSE C ON O.COURSE_ID = C.ID INNER JOIN
              ENROLLMENT_SEMESTER SEM ON O.SEMESTER_ID = SEM.ID INNER JOIN
              GRADE_GRADEFRAGMENT F ON G.GRADE_FRAGMENT_ID = F.ID
            WHERE 
              G.GRADE_QUANTITY IS NOT NULL AND
              E.ACTIVE = TRUE
            GROUP BY 
              G.GRADE_FRAGMENT_ID, 
              F.BOUNDARY_TYPE,
              F.CATEGORY, 
              F.DESCRIPTION, 
              F.WEIGHT, 
              S.ID, 
              S.CODE, 
              C.ID, 
              C.CODE, 
              SEM.ID, 
              SEM.CODE) Q;
            """
        ),
    ]
