# Generated by Django 2.0.1 on 2018-12-27 11:35

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('attendance', '0008_drop_long_named_view_and_function'),
    ]

    operations = [
        migrations.RunSQL(
            """
            CREATE OR REPLACE FUNCTION attendance_deduction(enrollment_id integer)
                  RETURNS DECIMAL AS
                $BODY$
                
                DECLARE
                 temp_count INTEGER DEFAULT 0;
                 deduction_formula TEXT DEFAULT '';
                 titles TEXT DEFAULT '';
                 temp_rec1   RECORD;
                 deduction   DECIMAL;
                
                 -- this cursor is for getting all possible combinations of periods and attendance statuses plus the count of each
                 -- combination for the student himself
                 all_periods_statuses_counts CURSOR(v_enrollment_id INTEGER)
                    FOR select q1.period_status, coalesce(q2.count, 0) count from (
                      SELECT DISTINCT
                          attendance_scheduledperiod.title || '_' || q.status period_status
                          FROM
                            public.attendance_scheduledperiod,
                            public.enrollment_enrollment,
                            (select 'abs' status union select 'lat' union select 'exc' union select 'pre') q
                          WHERE
                            attendance_scheduledperiod.section_id = enrollment_enrollment.section_id and
                            enrollment_enrollment.id = v_enrollment_id) q1 left join
                      (
                      select
                            attendance_scheduledperiod.title || '_' || attendance_attendance.status period_status,
                            count(attendance_scheduledperiod.title || '_' || attendance_attendance.status) count
                          from
                            public.attendance_attendance,
                            public.attendance_attendanceinstance,
                            public.attendance_scheduledperiod,
                            public.enrollment_enrollment
                          where
                            attendance_attendance.attendance_instance_id = attendance_attendanceinstance.id and
                            enrollment_enrollment.id = attendance_attendance.enrollment_id and
                            attendance_attendanceinstance.period_id = attendance_scheduledperiod.id and
                            attendance_attendance.enrollment_id = v_enrollment_id
                          group by
                            attendance_scheduledperiod.title || '_' || attendance_attendance.status
                      ) q2 on q1.period_status = q2.period_status;
                
                BEGIN
                
                    -- This will get the deduction formula relevant to the enrollment
                    SELECT enrollment_courseoffering.formula INTO deduction_formula
                      FROM
                        public.enrollment_enrollment,
                        public.enrollment_section,
                        public.enrollment_courseoffering
                      WHERE
                        enrollment_enrollment.section_id = enrollment_section.id AND
                        enrollment_section.course_offering_id = enrollment_courseoffering.id AND
                        enrollment_enrollment.id = enrollment_id;
                        
                    IF deduction_formula IS NOT NULL OR length(deduction_formula) > 0 THEN
                
                       -- this will substitute all symbols like LEC_abs with the actual count; in this example case, it will substitute
                       -- it with the count of absences in all LEC periods
                       OPEN all_periods_statuses_counts(enrollment_id);
                       LOOP
                          FETCH all_periods_statuses_counts INTO temp_rec1;
                          EXIT WHEN NOT FOUND;
                          IF temp_rec1.count > 0 and temp_rec1.period_status IS NOT NULL THEN
                            deduction_formula := replace(deduction_formula, temp_rec1.period_status, temp_rec1.count :: text);
                          END IF;
                          IF temp_rec1.count = 0 OR temp_rec1.count IS NULL THEN
                            deduction_formula := replace(deduction_formula, temp_rec1.period_status, '0');
                          END IF;
                       END LOOP;
                       CLOSE all_periods_statuses_counts;
                     
                       execute  'SELECT ' || deduction_formula  into  deduction;
                    
                       RETURN deduction;
                    ELSE
                        RETURN 0.00;
                    END IF;
                
                END; 
                $BODY$
                LANGUAGE plpgsql VOLATILE
            """
        ),
    ]
