# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-10-18 04:29
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Coordinator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='english name')),
                ('arabic_name', models.CharField(max_length=255, null=True, verbose_name='arabic name')),
                ('code', models.CharField(max_length=20, null=True)),
                ('description', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseOffering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_entry_window', models.PositiveIntegerField(default=7, null=True, verbose_name='attendance window')),
                ('coordinated', models.BooleanField(default=1)),
                ('allow_change', models.BooleanField(default=1, help_text='This if checked will allow the instructors to change the attendances after submitting', verbose_name='Allow changing after submitting attendance?')),
                ('total_rounding_type', models.CharField(choices=[('ceil', 'Ceiling'), ('floor', 'Floor'), ('round', 'Round'), ('none', 'None')], default='none', help_text='Total grade rounding method for letter grade calculation', max_length=50, null=True, verbose_name='Total Rounding Type')),
                ('course', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='offering', to='enrollment.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True, verbose_name='english name')),
                ('arabic_name', models.CharField(max_length=50, null=True, verbose_name='arabic name')),
                ('code', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('comment', models.CharField(blank=True, max_length=200, verbose_name='Comment')),
                ('letter_grade', models.CharField(default='UD', max_length=20, null=True, verbose_name='letter grade')),
                ('register_date', models.DateTimeField(null=True, verbose_name='Enrollment Date')),
            ],
            options={
                'ordering': ['student__university_id'],
            },
        ),
        migrations.CreateModel(
            name='Instructor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('university_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='university id')),
                ('government_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='government id')),
                ('english_name', models.CharField(max_length=255, null=True, verbose_name='english name')),
                ('arabic_name', models.CharField(max_length=255, null=True, verbose_name='arabic name')),
                ('mobile', models.CharField(blank=True, max_length=20, null=True, verbose_name='mobile')),
                ('personal_email', models.EmailField(max_length=254, null=True, verbose_name='personal email')),
                ('active', models.BooleanField(default=False, verbose_name='is_active')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, null=True)),
                ('rounding_type', models.CharField(choices=[('ceil', 'Ceiling'), ('floor', 'Floor'), ('round', 'Round'), ('none', 'None')], default='none', help_text='Total grade rounding method for letter grade calculation', max_length=50, null=True, verbose_name='Rounding Type')),
                ('crn', models.CharField(max_length=100, null=True, verbose_name='CRN')),
                ('active', models.BooleanField(default=False, verbose_name='Active')),
                ('course_offering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='enrollment.CourseOffering')),
            ],
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='start date')),
                ('end_date', models.DateField(verbose_name='end date')),
                ('grade_fragment_deadline', models.DateField(null=True, verbose_name='Grade Break Down Deadline Date')),
                ('code', models.CharField(max_length=20, null=True)),
                ('description', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('university_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='university id')),
                ('government_id', models.CharField(blank=True, max_length=20, null=True, verbose_name='government id')),
                ('english_name', models.CharField(max_length=255, null=True, verbose_name='english name')),
                ('arabic_name', models.CharField(max_length=255, null=True, verbose_name='arabic name')),
                ('mobile', models.CharField(blank=True, max_length=20, null=True, verbose_name='mobile')),
                ('personal_email', models.EmailField(max_length=254, null=True, verbose_name='personal email')),
                ('active', models.BooleanField(default=False, verbose_name='is_active')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_language', models.CharField(choices=[('ar', 'Arabic'), ('en', 'English')], default='ar', max_length=2, verbose_name='preferred language')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='user_profile',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student', to='enrollment.UserProfile'),
        ),
        migrations.AddField(
            model_name='instructor',
            name='user_profile',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instructor', to='enrollment.UserProfile'),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='section',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='enrollment.Section'),
        ),
        migrations.AddField(
            model_name='enrollment',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='enrollment.Student'),
        ),
        migrations.AddField(
            model_name='courseoffering',
            name='semester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offering', to='enrollment.Semester'),
        ),
        migrations.AddField(
            model_name='course',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='enrollment.Department'),
        ),
        migrations.AddField(
            model_name='coordinator',
            name='course_offering',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coordinators', to='enrollment.CourseOffering'),
        ),
        migrations.AddField(
            model_name='coordinator',
            name='instructor',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='coordinators', to='enrollment.Instructor'),
        ),
        migrations.AlterUniqueTogether(
            name='enrollment',
            unique_together=set([('student', 'section')]),
        ),
    ]
